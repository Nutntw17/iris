import streamlit as st
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns

# ‡∏ï‡∏±‡πâ‡∏á‡∏Ñ‡πà‡∏≤‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏û‡∏à
st.set_page_config(
    page_title="‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏≠‡∏Å‡πÑ‡∏≠‡∏£‡∏¥‡∏™",
    page_icon="üå∏",
    layout="wide"
)

# ‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•
@st.cache_data
def load_data():
    try:
        data = pd.read_csv('iris.csv')
        return data
    except:
        st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÇ‡∏´‡∏•‡∏î‡πÑ‡∏ü‡∏•‡πå iris.csv ‡πÑ‡∏î‡πâ")
        return None

df = load_data()

if df is not None:
    # ‡∏´‡∏±‡∏ß‡∏Ç‡πâ‡∏≠‡∏´‡∏•‡∏±‡∏Å
    st.title("üå∏ ‡∏Å‡∏≤‡∏£‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏î‡∏≠‡∏Å‡πÑ‡∏≠‡∏£‡∏¥‡∏™")
    st.markdown("### ‡πÅ‡∏ú‡∏ô‡∏†‡∏≤‡∏û‡∏Ñ‡∏π‡πà‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞‡∏î‡∏≠‡∏Å‡πÑ‡∏≠‡∏£‡∏¥‡∏™‡πÅ‡∏ö‡πà‡∏á‡∏ï‡∏≤‡∏°‡∏™‡∏≤‡∏¢‡∏û‡∏±‡∏ô‡∏ò‡∏∏‡πå")
    
    # ‡∏™‡∏£‡πâ‡∏≤‡∏á pairplot ‡πÅ‡∏ö‡∏ö‡∏û‡∏∑‡πâ‡∏ô‡∏ê‡∏≤‡∏ô
    try:
        # ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 1: ‡πÉ‡∏ä‡πâ seaborn pairplot ‡∏õ‡∏Å‡∏ï‡∏¥
        fig = plt.figure(figsize=(10, 10))
        g = sns.pairplot(df, hue='species')
        st.pyplot(g.fig)
    except Exception as e:
        st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 1: {str(e)}")
        
        try:
            # ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 2: ‡∏•‡∏≠‡∏á‡πÉ‡∏ä‡πâ‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á matplotlib ‡πÅ‡∏ö‡∏ö‡∏ï‡∏£‡∏á‡πÜ
            fig, axes = plt.subplots(4, 4, figsize=(15, 15))
            
            features = df.columns[:-1]
            
            for i, feature_x in enumerate(features):
                for j, feature_y in enumerate(features):
                    ax = axes[i, j]
                    
                    if i == j:  # ‡πÅ‡∏™‡∏î‡∏á‡∏Æ‡∏¥‡∏™‡πÇ‡∏ï‡πÅ‡∏Å‡∏£‡∏°‡∏ö‡∏ô‡πÅ‡∏ô‡∏ß‡∏ó‡πÅ‡∏¢‡∏á
                        for species, color in zip(['setosa', 'versicolor', 'virginica'], ['blue', 'orange', 'green']):
                            data = df[df['species'] == species]
                            ax.hist(data[feature_x], alpha=0.5, color=color, label=species)
                    else:  # ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡∏Å‡∏£‡∏∞‡∏à‡∏≤‡∏¢‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Ñ‡∏π‡πà‡∏Ñ‡∏∏‡∏ì‡∏•‡∏±‡∏Å‡∏©‡∏ì‡∏∞
                        for species, color in zip(['setosa', 'versicolor', 'virginica'], ['blue', 'orange', 'green']):
                            data = df[df['species'] == species]
                            ax.scatter(data[feature_x], data[feature_y], alpha=0.5, color=color, label=species)
                    
                    if i == 3:
                        ax.set_xlabel(feature_x)
                    if j == 0:
                        ax.set_ylabel(feature_y)
            
            handles, labels = axes[0, 0].get_legend_handles_labels()
            fig.legend(handles, labels, loc='upper right')
            plt.tight_layout()
            st.pyplot(fig)
        except Exception as e:
            st.error(f"‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ö‡∏ö‡∏ó‡∏µ‡πà 2: {str(e)}")
            
            # ‡∏ß‡∏¥‡∏ò‡∏µ‡∏ó‡∏µ‡πà 3: ‡πÅ‡∏™‡∏î‡∏á‡∏Ñ‡∏π‡πà‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏ï‡πà‡∏•‡∏∞‡∏Ñ‡∏π‡πà‡πÅ‡∏¢‡∏Å‡∏Å‡∏±‡∏ô
            st.write("‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü‡πÅ‡∏¢‡∏Å‡πÄ‡∏õ‡πá‡∏ô‡∏Ñ‡∏π‡πà‡πÜ:")
            
            features = df.columns[:-1]
            for i, feature_x in enumerate(features):
                for j, feature_y in enumerate(features):
                    if i < j:  # ‡πÅ‡∏™‡∏î‡∏á‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏Ñ‡∏£‡∏∂‡πà‡∏á‡∏ö‡∏ô‡∏Ç‡∏≠‡∏á‡πÄ‡∏°‡∏ó‡∏£‡∏¥‡∏Å‡∏ã‡πå
                        fig, ax = plt.subplots(figsize=(5, 5))
                        for species, color in zip(['setosa', 'versicolor', 'virginica'], ['blue', 'orange', 'green']):
                            data = df[df['species'] == species]
                            ax.scatter(data[feature_x], data[feature_y], alpha=0.7, color=color, label=species)
                        ax.set_xlabel(feature_x)
                        ax.set_ylabel(feature_y)
                        ax.legend()
                        st.pyplot(fig)
else:
    st.error("‡πÑ‡∏°‡πà‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡∏î‡∏≥‡πÄ‡∏ô‡∏¥‡∏ô‡∏Å‡∏≤‡∏£‡∏ï‡πà‡∏≠‡πÄ‡∏ô‡∏∑‡πà‡∏≠‡∏á‡∏à‡∏≤‡∏Å‡πÑ‡∏°‡πà‡∏û‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•")
